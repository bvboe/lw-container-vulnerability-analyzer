#!/bin/bash
cd "$(dirname "$0")"
mkdir -p data
cd data
rm *tmp*

function loadDayOfScanHistory {
    local daysBack=$1
    local day=`date -v-${daysBack}d +%Y-%m-%d`
    echo Load data for $day
    local tmpFilename="${day}-raw-tmp.json"
    local finaFileName="${day}-raw.json"

    local timeFilter="\"timeFilter\": {\"startTime\": \"${day}T00:00:00Z\",\"endTime\": \"${day}T23:59:59Z\"}"

    if [ -f $finaFileName ]
    then
        echo Data already loaded, skip
        return
    fi

    lacework api post /api/v2/Vulnerabilities/Containers/search --data "{${timeFilter}, \"filters\": [{\"expression\": \"eq\",\"field\": \"status\",\"value\": \"VULNERABLE\"}, {\"expression\": \"gt\",\"field\": \"riskInfo.factors_breakdown.active_containers\",\"value\": \"0\"}]}" > tmpdata.json
    cat tmpdata.json | jq '.data | .[]' >> $tmpFilename
    local nextPage=`cat tmpdata.json | jq -r '.paging.urls.nextPage'`
    local rowsLoaded=`cat tmpdata.json | jq -r '.paging.rows'`
    local totalRows=`cat tmpdata.json | jq -r '.paging.totalRows'`
    echo Total number of rows: ${totalRows}
    echo Loaded ${rowsLoaded} rows
    while [[ $nextPage != "null" ]]
    do
        echo Load next page
        local nextPage=`echo $nextPage | sed 's/^.*api/api/'`
        lacework api get $nextPage > tmpdata.json
        cat tmpdata.json | jq '.data | .[]' >> $tmpFilename
        rows=`cat tmpdata.json | jq -r '.paging.rows'`
        local rowsLoaded=$(($rowsLoaded + $rows))
        echo Loaded ${rowsLoaded} rows
        local nextPage=`cat tmpdata.json | jq -r '.paging.urls.nextPage'`
    done
    mv $tmpFilename $finaFileName
    rm tmpdata.json
}

for i in {1..90}
do
    loadDayOfScanHistory $i
done
